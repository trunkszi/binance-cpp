# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(asynchronous LANGUAGES CXX C)

# target
add_executable(asynchronous "")
set_target_properties(asynchronous PROPERTIES OUTPUT_NAME "asynchronous")
set_target_properties(asynchronous PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(asynchronous binapi)
target_include_directories(asynchronous PRIVATE
    include
)
target_include_directories(asynchronous PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(asynchronous PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(asynchronous PRIVATE -W3)
else()
    target_compile_options(asynchronous PRIVATE -Wall)
endif()
set_target_properties(asynchronous PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(asynchronous PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(asynchronous PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(asynchronous PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(asynchronous PRIVATE -Zi)
else()
    target_compile_options(asynchronous PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET asynchronous PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(asynchronous PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    binapi
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(asynchronous PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
    build/windows/x64/debug
)
target_link_options(asynchronous PRIVATE
    /FORCE:MULTIPLE
)
target_sources(asynchronous PRIVATE
    examples/asynchronous/main.cpp
)

# target
add_executable(asynchronous-user_data "")
set_target_properties(asynchronous-user_data PROPERTIES OUTPUT_NAME "asynchronous-user_data")
set_target_properties(asynchronous-user_data PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(asynchronous-user_data binapi)
target_include_directories(asynchronous-user_data PRIVATE
    include
)
target_include_directories(asynchronous-user_data PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(asynchronous-user_data PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(asynchronous-user_data PRIVATE -W3)
else()
    target_compile_options(asynchronous-user_data PRIVATE -Wall)
endif()
set_target_properties(asynchronous-user_data PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(asynchronous-user_data PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(asynchronous-user_data PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(asynchronous-user_data PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(asynchronous-user_data PRIVATE -Zi)
else()
    target_compile_options(asynchronous-user_data PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET asynchronous-user_data PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(asynchronous-user_data PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    binapi
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(asynchronous-user_data PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
    build/windows/x64/debug
)
target_link_options(asynchronous-user_data PRIVATE
    /FORCE:MULTIPLE
)
target_sources(asynchronous-user_data PRIVATE
    examples/asynchronous-user_data/main.cpp
)

# target
add_library(binapi STATIC "")
set_target_properties(binapi PROPERTIES OUTPUT_NAME "binapi")
set_target_properties(binapi PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(binapi PRIVATE
    include
)
target_include_directories(binapi PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(binapi PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(binapi PRIVATE -W3)
else()
    target_compile_options(binapi PRIVATE -Wall)
endif()
set_target_properties(binapi PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(binapi PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(binapi PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(binapi PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(binapi PRIVATE -Zi)
else()
    target_compile_options(binapi PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET binapi PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(binapi PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(binapi PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
)
target_link_options(binapi PRIVATE
    /FORCE:MULTIPLE
)
target_sources(binapi PRIVATE
    src/api.cpp
    src/enums.cpp
    src/errors.cpp
    src/pairslist.cpp
    src/reports.cpp
    src/tools.cpp
    src/types.cpp
    src/websocket.cpp
    include/binapi/dtf.cpp
)

# target
add_executable(example "")
set_target_properties(example PROPERTIES OUTPUT_NAME "example")
set_target_properties(example PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(example PRIVATE
    include
)
target_include_directories(example PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(example PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(example PRIVATE -W3)
else()
    target_compile_options(example PRIVATE -Wall)
endif()
set_target_properties(example PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(example PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(example PRIVATE -Zi)
else()
    target_compile_options(example PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET example PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(example PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(example PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
)
target_link_options(example PRIVATE
    /FORCE:MULTIPLE
)
target_sources(example PRIVATE
    main.cpp
    src/api.cpp
    src/enums.cpp
    src/errors.cpp
    src/pairslist.cpp
    src/reports.cpp
    src/tools.cpp
    src/types.cpp
    src/websocket.cpp
    include/binapi/dtf.cpp
)

# target
add_executable(synchronous "")
set_target_properties(synchronous PROPERTIES OUTPUT_NAME "synchronous")
set_target_properties(synchronous PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(synchronous binapi)
target_include_directories(synchronous PRIVATE
    include
)
target_include_directories(synchronous PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(synchronous PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(synchronous PRIVATE -W3)
else()
    target_compile_options(synchronous PRIVATE -Wall)
endif()
set_target_properties(synchronous PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(synchronous PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(synchronous PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(synchronous PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(synchronous PRIVATE -Zi)
else()
    target_compile_options(synchronous PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET synchronous PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(synchronous PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    binapi
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(synchronous PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
    build/windows/x64/debug
)
target_link_options(synchronous PRIVATE
    /FORCE:MULTIPLE
)
target_sources(synchronous PRIVATE
    examples/synchronous/main.cpp
)

# target
add_executable(synchronous-user_data "")
set_target_properties(synchronous-user_data PROPERTIES OUTPUT_NAME "synchronous-user_data")
set_target_properties(synchronous-user_data PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(synchronous-user_data binapi)
target_include_directories(synchronous-user_data PRIVATE
    include
)
target_include_directories(synchronous-user_data PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(synchronous-user_data PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(synchronous-user_data PRIVATE -W3)
else()
    target_compile_options(synchronous-user_data PRIVATE -Wall)
endif()
set_target_properties(synchronous-user_data PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(synchronous-user_data PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(synchronous-user_data PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(synchronous-user_data PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(synchronous-user_data PRIVATE -Zi)
else()
    target_compile_options(synchronous-user_data PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET synchronous-user_data PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(synchronous-user_data PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    binapi
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(synchronous-user_data PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
    build/windows/x64/debug
)
target_link_options(synchronous-user_data PRIVATE
    /FORCE:MULTIPLE
)
target_sources(synchronous-user_data PRIVATE
    examples/synchronous-user_data/main.cpp
)

# target
add_executable(websockets "")
set_target_properties(websockets PROPERTIES OUTPUT_NAME "websockets")
set_target_properties(websockets PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(websockets binapi)
target_include_directories(websockets PRIVATE
    include
)
target_include_directories(websockets PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/include
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/include
)
target_compile_definitions(websockets PRIVATE
    BOOST_ALL_NO_LIB
)
if(MSVC)
    target_compile_options(websockets PRIVATE -W3)
else()
    target_compile_options(websockets PRIVATE -Wall)
endif()
set_target_properties(websockets PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(websockets PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(websockets PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(websockets PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(websockets PRIVATE -Zi)
else()
    target_compile_options(websockets PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET websockets PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded")
endif()
target_link_libraries(websockets PRIVATE
    libboost_fiber-mt-s
    libboost_coroutine-mt-s
    libboost_context-mt-s
    libboost_thread-mt-s
    libboost_regex-mt-s
    libboost_system-mt-s
    libboost_container-mt-s
    libboost_exception-mt-s
    libboost_timer-mt-s
    libboost_atomic-mt-s
    libboost_graph-mt-s
    libboost_serialization-mt-s
    libboost_random-mt-s
    libboost_wave-mt-s
    libboost_date_time-mt-s
    libboost_locale-mt-s
    libboost_iostreams-mt-s
    libboost_program_options-mt-s
    libboost_chrono-mt-s
    libboost_contract-mt-s
    libboost_json-mt-s
    libboost_log_setup-mt-s
    libboost_log-mt-s
    libboost_filesystem-mt-s
    libboost_nowide-mt-s
    libboost_type_erasure-mt-s
    libssl
    libcrypto
    binapi
    shell32
    ole32
    ws2_32
    user32
    crypt32
    advapi32
)
target_link_directories(websockets PRIVATE
    C:/Users/shiqj/AppData/Local/.xmake/packages/b/boost/1.80.0/bdea09c37e4e47d0b145d5f4d9de550b/lib
    C:/Users/shiqj/AppData/Local/.xmake/packages/o/openssl/1.1.1q/122bf2e537f34e8a954b5296408a9aee/lib
    build/windows/x64/debug
)
target_link_options(websockets PRIVATE
    /FORCE:MULTIPLE
)
target_sources(websockets PRIVATE
    examples/websockets/main.cpp
)

